(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{549:function(e,n,a){"use strict";a.r(n);var t=a(17),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"venus-sector-manager-的配置解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#venus-sector-manager-的配置解析"}},[e._v("#")]),e._v(" venus-sector-manager 的配置解析")]),e._v(" "),a("p",[a("code",[e._v("venus-sector-manager")]),e._v(" 是与链交互、维持扇区的注意，我们来了解一下它的配置文件结构和配置方式。")]),e._v(" "),a("p",[e._v("在完成初始化之后，我们可以得到一份原始的配置内容：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# Default config:\n[Common]\n[Common.API]\n#Chain = "/ip4/{api_host}/tcp/{api_port}"\n#Messager = "/ip4/{api_host}/tcp/{api_port}"\n#Market = "/ip4/{api_host}/tcp/{api_port}"\n#Gateway = ["/ip4/{api_host}/tcp/{api_port}"]\n#Token = "{some token}"\n#\n[[Common.PieceStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#Strict = false\n#ReadOnly = false\n#\n[[Common.PersistStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#Strict = false\n#ReadOnly = false\n#\n[[Miners]]\n#Actor = 10086\n[Miners.Sector]\n#InitNumber = 0\n#MaxNumber = 1000000\n#Enabled = true\n[Miners.Commitment]\n#Confidence = 10\n[Miners.Commitment.Pre]\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Pre.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Prove]\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Prove.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.PoSt]\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#Enabled = true\n#StrictCheck = true\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n#Confidence = 10\n[Miners.Proof]\n#Enabled = false\n[Miners.Deal]\n#Enabled = false\n#\n')])])]),a("p",[e._v("我们将逐一分析其中的可配置项。")]),e._v(" "),a("h2",{attrs:{id:"common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[e._v("#")]),e._v(" [Common]")]),e._v(" "),a("p",[a("code",[e._v("Common")]),e._v(" 是公共配置，又分成三个子配置项：")]),e._v(" "),a("h3",{attrs:{id:"common-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-api"}},[e._v("#")]),e._v(" [Common.API]")]),e._v(" "),a("p",[a("code",[e._v("Common.API")]),e._v(" 是接口相关的配置，其内容包含：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[Common.API]\n# 链服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nChain = "/ip4/{api_host}/tcp/{api_port}"\n\n# 消息服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nMessager = "/ip4/{api_host}/tcp/{api_port}"\n\n# 市场服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nMarket = "/ip4/{api_host}/tcp/{api_port}"\n\n# 事件网关服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\n\n# 服务 token， 必填项，字符串类型\n# 根据所使用的服务实际情况填写\nToken = "{some token}"\n\n')])])]),a("h3",{attrs:{id:"common-piecestores"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-piecestores"}},[e._v("#")]),e._v(" [[Common.PieceStores]]")]),e._v(" "),a("p",[a("code",[e._v("Common.PieceStores")]),e._v("是用于配置本地订单 "),a("code",[e._v("piece")]),e._v(" 数据的选项。当存在可用的离线存储时，可以配置此项，避免通过公网获取订单的"),a("code",[e._v("piece")]),e._v(" 数据。")]),e._v(" "),a("p",[e._v("每一个本地存储目录对应一个 "),a("code",[e._v("Common.PieceStores")]),e._v(" 配置块。")]),e._v(" "),a("h4",{attrs:{id:"基础配置范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础配置范例"}},[e._v("#")]),e._v(" 基础配置范例")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[[Common.PieceStores]]\n# 路径，必填项，字符串类型\nPath = "/mnt/mass/piece1"\n\n')])])]),a("h3",{attrs:{id:"common-persiststores"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-persiststores"}},[e._v("#")]),e._v(" [[Common.PersistStores]]")]),e._v(" "),a("p",[a("code",[e._v("Common.PersistStores")]),e._v(" 用于配置扇区持久化数据存储。与之对应的是 "),a("code",[e._v("venus-worker")]),e._v(" 中的 "),a("code",[e._v("remote_store")]),e._v(" 概念。")]),e._v(" "),a("p",[e._v("与 "),a("code",[e._v("Common.PieceStores")]),e._v(" 类似，每一个持久化存储目录对应一个 "),a("code",[e._v("Common.PersistStores")]),e._v(" 配置块。")]),e._v(" "),a("h4",{attrs:{id:"基础配置范例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础配置范例-2"}},[e._v("#")]),e._v(" 基础配置范例")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[[Common.PersistStores]]\n# 名称， 选填项，字符串类型\n# 默认为路径对应的绝对路径\nName = "remote-store1"\n\n# 路径，必填项，字符串类型\n# 建议使用绝对路径\nPath = "/mnt/remote/10.0.0.14/store"\n')])])]),a("h2",{attrs:{id:"miners"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners"}},[e._v("#")]),e._v(" [[Miners]]")]),e._v(" "),a("p",[a("code",[e._v("Miners")]),e._v(" 是较为重要的一个配置项，用于针对某一个 "),a("code",[e._v("SP")]),e._v(" 定义其行为和策略。")]),e._v(" "),a("p",[a("code",[e._v("venus-cluster")]),e._v(" 被设计为同一套组件可以支持多个 "),a("code",[e._v("SP")]),e._v(" ，在 "),a("code",[e._v("venus-sector-manager")]),e._v(" 中的具体表现就是可以根据需要设置多个 "),a("code",[e._v("Miners")]),e._v(" 配置块。")]),e._v(" "),a("h3",{attrs:{id:"主配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主配置项"}},[e._v("#")]),e._v(" 主配置项")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[[Miners]]\n# `SP` actor id， 必填项，数字类型\nActor = 10086\n")])])]),a("p",[e._v("除主配置向外， "),a("code",[e._v("Miners")]),e._v(" 同样包含多个不同的子配置块，下面我们一一分析")]),e._v(" "),a("h3",{attrs:{id:"miners-sector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-sector"}},[e._v("#")]),e._v(" [Miners.Sector]")]),e._v(" "),a("p",[e._v("用于控制扇区分配的策略。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Miners.Sector]\n# 扇区起始编号，选填项，数字类型\n# 默认值为 0\nInitNumber = 0\n\n# 扇区编号上限，选填项，数字类型\n# 默认值为 null， 表示无上限限制\n#MaxNumber = 1000000\n\n# 是否允许分配扇区， 选填项，布尔类型\n# 默认值为 true， 即开启分配\n#Enabled = true\n")])])]),a("h3",{attrs:{id:"miners-commitment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment"}},[e._v("#")]),e._v(" [Miners.Commitment]")]),e._v(" "),a("p",[e._v("用于配置封装消息提交策略的通用部分。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Miners.Commitment]\n# 消息的稳定高度，选填项，数字类型\n# 默认值为 10\n#Confidence = 10\n")])])]),a("h3",{attrs:{id:"miners-commitment-pre"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-pre"}},[e._v("#")]),e._v(" [Miners.Commitment.Pre]")]),e._v(" "),a("p",[e._v("用于配置 "),a("code",[e._v("PreCommit")]),e._v(" 消息提交的策略")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[Miners.Commitment.Pre]\n# 发送地址，必填项，地址类型\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# 单条提交消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为1.2\n#GasOverEstimation = 1.2\n\n# 单条提交消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n\n# 聚合提交的策略配置块\n[Miners.Commitment.Pre.Batch]\n# 是否启用聚合提交，选填项，布尔类型\n# 默认值为 false， 即不启用\n#Enabled = false\n\n# 最小聚合条数，选填项，数字类型\n# 默认值为 16，即最小聚合条数为 16条\n#Threshold = 16\n\n# 最大等待时间，选填项，时间类型\n# 默认值为 1h，即最大等待 1 小时\n#MaxWait = "1h0m0s"\n\n# 检查间隔，选填项，时间类型\n# 默认值为 1min，即每隔 1min 检查一次是否满足聚合条件\n#CheckInterval = "1m0s"\n\n# 聚合提交消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为 1.2\n#GasOverEstimation = 1.2\n\n# 聚合提交消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n')])])]),a("h3",{attrs:{id:"miners-commitment-prove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-prove"}},[e._v("#")]),e._v(" [Miners.Commitment.Prove]")]),e._v(" "),a("p",[e._v("用于配置 "),a("code",[e._v("ProveCommit")]),e._v(" 消息提交的策略，其配置项和作用与 "),a("code",[e._v("Miners.Commitment.Pre")]),e._v("内的完全一致。")]),e._v(" "),a("h3",{attrs:{id:"miners-post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-post"}},[e._v("#")]),e._v(" [Miners.PoSt]")]),e._v(" "),a("p",[e._v("用于配置 "),a("code",[e._v("WindowPoSt")]),e._v(" 的相关策略。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[Miners.PoSt]\n# 发送地址，必填项，地址类型\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# 是否启用，选填项，布尔类型\n# 默认值为 true\n#Enabled = true\n\n# 是否对扇区文件进行强校验，选填项，布尔类型\n# 默认值为 true\n# 开启时，除了对文件存在性进行判断外，还会尝试读取部分信息，如元数据等\n#StrictCheck = true\n\n# WindowPoSt 消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为 1.2\n#GasOverEstimation = 1.2\n\n# WindowPoSt 消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n\n# 消息的稳定高度，选填项，数字类型\n# 默认值为 10\n#Confidence = 10\n')])])]),a("h3",{attrs:{id:"miners-proof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-proof"}},[e._v("#")]),e._v(" [Miners.Proof]")]),e._v(" "),a("p",[e._v("用于配置 WinningPoSt Proof 相关的策略")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Miners.Proof]\n# 是否启用，选填项，布尔类型\n# 默认值为 false\n#Enabled = false\n")])])]),a("h3",{attrs:{id:"miners-deal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-deal"}},[e._v("#")]),e._v(" [Miners.Deal]")]),e._v(" "),a("p",[e._v("用于配置订单相关的策略。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[Miners.Deal]\n# 是否启用，选填项，布尔类型\n# 默认值为 false\n#Enabled = false\n")])])]),a("h2",{attrs:{id:"一份最简可工作的配置文件范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一份最简可工作的配置文件范例"}},[e._v("#")]),e._v(" 一份最简可工作的配置文件范例")]),e._v(" "),a("p",[e._v("我们以启动支持一个 "),a("code",[e._v("SP")]),e._v("  运作的 "),a("code",[e._v("venus-sector-manager")]),e._v(" 为例，")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[Common]\n[Common.API]\nChain = "/ip4/{api_host}/tcp/{api_port}"\nMessager = "/ip4/{api_host}/tcp/{api_port}"\nMarket = "/ip4/{api_host}/tcp/{api_port}"\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\nToken = "{some token}"\n\n[[Common.PieceStores]]\nPath = "{store_path}"\n\n[[Common.PersistStores]]\nName = "{store_name1}"\nPath = "{store_path1}"\n\n[[Common.PersistStores]]\nName = "{store_name2}"\nPath = "{store_path2}"\n\n[[Common.PersistStores]]\nName = "{store_name3}"\nPath = "{store_path3}"\n\n[[Common.PersistStores]]\nName = "{store_name4}"\nPath = "{store_path4}"\n\n[[Miners]]\nActor = 10086\n[Miners.Sector]\nInitNumber = 1000\nEnabled = true\n\n[Miners.Commitment]\n[Miners.Commitment.Pre]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Pre.Batch]\nEnabled = false\n\n[Miners.Commitment.Prove]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Prove.Batch]\nEnabled = true\n\n[Miners.PoSt]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\nEnabled = true\n\n[Miners.Proof]\nEnabled = true\n\n[Miners.Deal]\nEnabled = true\n\n')])])]),a("p",[e._v("这样就激活了一个：")]),e._v(" "),a("ul",[a("li",[e._v("拥有1个本地 PieceStore")]),e._v(" "),a("li",[e._v("拥有4个本地 持久化 Store")]),e._v(" "),a("li",[e._v("启用扇区分配，其初始编号为1000")]),e._v(" "),a("li",[e._v("不启用聚合 PreCommit")]),e._v(" "),a("li",[e._v("启用聚合 ProveCommit")]),e._v(" "),a("li",[e._v("启用 WinningPoSt 模块")]),e._v(" "),a("li",[e._v("启用订单")])]),e._v(" "),a("p",[e._v("的 "),a("code",[e._v("venus-sector-manager")]),e._v(" 实例。")])])}),[],!1,null,null,null);n.default=s.exports}}]);